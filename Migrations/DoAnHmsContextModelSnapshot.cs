// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_DA.Models;

#nullable disable

namespace Web_DA.Migrations
{
    [DbContext(typeof(DoAnHmsContext))]
    partial class DoAnHmsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web_DA.Models.CtphieuDatPhong", b =>
                {
                    b.Property<string>("MaPdp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maPDP");

                    b.Property<string>("MaP")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maP");

                    b.Property<decimal>("TienCoc")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("tienCoc");

                    b.HasKey("MaPdp", "MaP")
                        .HasName("ctpdp_pk");

                    b.HasIndex("MaP");

                    b.ToTable("CTPhieuDatPhong", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.CtphieuThuePhong", b =>
                {
                    b.Property<string>("MaPtp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maPTP");

                    b.Property<string>("MaP")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maP");

                    b.Property<DateTime>("NgaySd")
                        .HasColumnType("datetime")
                        .HasColumnName("ngaySD");

                    b.Property<string>("MaDv")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maDV");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("soLuong");

                    b.HasKey("MaPtp", "MaP", "NgaySd", "MaDv")
                        .HasName("ctptp_pk");

                    b.HasIndex("MaDv");

                    b.HasIndex("MaP");

                    b.ToTable("CTPhieuThuePhong", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.DanhSachQuyen", b =>
                {
                    b.Property<string>("Idnhom")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNhom");

                    b.Property<string>("Idquyen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IDQuyen");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idnhom", "Idquyen");

                    b.HasIndex("Idquyen");

                    b.ToTable("DanhSachQuyen", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.DichVu", b =>
                {
                    b.Property<string>("MaDv")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maDV");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("gia");

                    b.Property<string>("TenDv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenDV");

                    b.HasKey("MaDv")
                        .HasName("dv_pk");

                    b.ToTable("DichVu", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.HoaDon", b =>
                {
                    b.Property<string>("MaPtp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maPTP");

                    b.Property<string>("MaHd")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maHD");

                    b.Property<string>("MaNv")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maNV");

                    b.Property<DateTime>("NgayTt")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayTT");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("tongTien");

                    b.HasKey("MaPtp")
                        .HasName("hd_pk");

                    b.HasIndex("MaNv");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKh")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maKH");

                    b.Property<string>("CmndPassport")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("cmnd_passport");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("diaChi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit")
                        .HasColumnName("gioiTinh");

                    b.Property<string>("QuocTich")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("quocTich");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sdt");

                    b.Property<string>("TenKh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenKH");

                    b.HasKey("MaKh")
                        .HasName("kh_pk");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.LienHe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("hoTen");

                    b.Property<DateOnly>("NgayGui")
                        .HasColumnType("date")
                        .HasColumnName("ngayGui");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sdt");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("bit")
                        .HasColumnName("tinhTrang");

                    b.HasKey("Id")
                        .HasName("PK__LienHe__3213E83F1FBEE420");

                    b.ToTable("LienHe", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.LoaiPhong", b =>
                {
                    b.Property<string>("MaLp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maLP");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("donGia");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("hinhAnh");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("moTa");

                    b.Property<int>("SucChua")
                        .HasColumnType("int")
                        .HasColumnName("sucChua");

                    b.Property<string>("TenLp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenLP");

                    b.HasKey("MaLp")
                        .HasName("lp_pk");

                    b.ToTable("LoaiPhong", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.NhanVien", b =>
                {
                    b.Property<string>("MaNv")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maNV");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("diaChi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit")
                        .HasColumnName("gioiTinh");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("hinhAnh");

                    b.Property<DateOnly>("NgaySinh")
                        .HasColumnType("date")
                        .HasColumnName("ngaySinh");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sdt");

                    b.Property<string>("TenNv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenNV");

                    b.HasKey("MaNv")
                        .HasName("nv_pk");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.NhomNhanVien", b =>
                {
                    b.Property<string>("Idnhom")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNhom");

                    b.Property<string>("TenNhom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idnhom");

                    b.ToTable("NhomNhanVien", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.PhanHoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("hoTen");

                    b.Property<DateOnly>("NgayGui")
                        .HasColumnType("date")
                        .HasColumnName("ngayGui");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("noiDung");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sdt");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__PhanHoi__3213E83FD831E5E3");

                    b.ToTable("PhanHoi", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.PhieuDatPhong", b =>
                {
                    b.Property<string>("MaPdp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maPDP");

                    b.Property<string>("MaKh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maKH");

                    b.Property<string>("MaNv")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maNV");

                    b.Property<DateOnly>("NgayDen")
                        .HasColumnType("date")
                        .HasColumnName("ngayDen");

                    b.Property<DateOnly>("NgayDi")
                        .HasColumnType("date")
                        .HasColumnName("ngayDi");

                    b.Property<int>("SoNguoi")
                        .HasColumnType("int")
                        .HasColumnName("soNguoi");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("bit")
                        .HasColumnName("tinhTrang");

                    b.Property<decimal>("TongTienCoc")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("tongTienCoc");

                    b.HasKey("MaPdp")
                        .HasName("pdp_pk");

                    b.HasIndex("MaKh");

                    b.HasIndex("MaNv");

                    b.ToTable("PhieuDatPhong", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.PhieuThuePhong", b =>
                {
                    b.Property<string>("MaPtp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maPTP");

                    b.Property<string>("MaKh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maKH");

                    b.Property<string>("MaNv")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maNV");

                    b.Property<string>("MaPdp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maPDP");

                    b.Property<DateOnly>("NgayThue")
                        .HasColumnType("date")
                        .HasColumnName("ngayThue");

                    b.Property<DateOnly>("NgayTra")
                        .HasColumnType("date")
                        .HasColumnName("ngayTra");

                    b.HasKey("MaPtp")
                        .HasName("ptp_pk");

                    b.HasIndex("MaKh");

                    b.HasIndex("MaNv");

                    b.HasIndex("MaPdp");

                    b.ToTable("PhieuThuePhong", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.Phong", b =>
                {
                    b.Property<string>("MaP")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maP");

                    b.Property<string>("MaLp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maLP");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("tinhTrang");

                    b.HasKey("MaP")
                        .HasName("p_pk");

                    b.HasIndex("MaLp");

                    b.ToTable("Phong", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.QuanTri", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("username");

                    b.Property<string>("Idnhom")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("NHANVIEN")
                        .HasColumnName("IDNhom");

                    b.Property<string>("MaNv")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("maNV");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("bit")
                        .HasColumnName("tinhTrang");

                    b.HasKey("Username")
                        .HasName("qt_pk");

                    b.HasIndex("Idnhom");

                    b.HasIndex("MaNv");

                    b.ToTable("QuanTri", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.Quyen", b =>
                {
                    b.Property<string>("Idquyen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IDQuyen");

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Idquyen");

                    b.ToTable("Quyen", (string)null);
                });

            modelBuilder.Entity("Web_DA.Models.CtphieuDatPhong", b =>
                {
                    b.HasOne("Web_DA.Models.Phong", "MaPNavigation")
                        .WithMany("CtphieuDatPhongs")
                        .HasForeignKey("MaP")
                        .IsRequired()
                        .HasConstraintName("ctpdp_p_fk");

                    b.HasOne("Web_DA.Models.PhieuDatPhong", "MaPdpNavigation")
                        .WithMany("CtphieuDatPhongs")
                        .HasForeignKey("MaPdp")
                        .IsRequired()
                        .HasConstraintName("ctpdp_pdp_fk");

                    b.Navigation("MaPNavigation");

                    b.Navigation("MaPdpNavigation");
                });

            modelBuilder.Entity("Web_DA.Models.CtphieuThuePhong", b =>
                {
                    b.HasOne("Web_DA.Models.DichVu", "MaDvNavigation")
                        .WithMany("CtphieuThuePhongs")
                        .HasForeignKey("MaDv")
                        .IsRequired()
                        .HasConstraintName("ctptp_dv_fk");

                    b.HasOne("Web_DA.Models.Phong", "MaPNavigation")
                        .WithMany("CtphieuThuePhongs")
                        .HasForeignKey("MaP")
                        .IsRequired()
                        .HasConstraintName("ctptp_p_fk");

                    b.HasOne("Web_DA.Models.PhieuThuePhong", "MaPtpNavigation")
                        .WithMany("CtphieuThuePhongs")
                        .HasForeignKey("MaPtp")
                        .IsRequired()
                        .HasConstraintName("ctptp_ptp_fk");

                    b.Navigation("MaDvNavigation");

                    b.Navigation("MaPNavigation");

                    b.Navigation("MaPtpNavigation");
                });

            modelBuilder.Entity("Web_DA.Models.DanhSachQuyen", b =>
                {
                    b.HasOne("Web_DA.Models.NhomNhanVien", "IdnhomNavigation")
                        .WithMany("DanhSachQuyens")
                        .HasForeignKey("Idnhom")
                        .IsRequired()
                        .HasConstraintName("FK_DanhSachQuyen_NhomNhanVien");

                    b.HasOne("Web_DA.Models.Quyen", "IdquyenNavigation")
                        .WithMany("DanhSachQuyens")
                        .HasForeignKey("Idquyen")
                        .IsRequired()
                        .HasConstraintName("FK_DanhSachQuyen_Quyen");

                    b.Navigation("IdnhomNavigation");

                    b.Navigation("IdquyenNavigation");
                });

            modelBuilder.Entity("Web_DA.Models.HoaDon", b =>
                {
                    b.HasOne("Web_DA.Models.NhanVien", "MaNvNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaNv")
                        .IsRequired()
                        .HasConstraintName("hd_nv_fk");

                    b.HasOne("Web_DA.Models.PhieuThuePhong", "MaPtpNavigation")
                        .WithOne("HoaDon")
                        .HasForeignKey("Web_DA.Models.HoaDon", "MaPtp")
                        .IsRequired()
                        .HasConstraintName("hd_ptp_fk");

                    b.Navigation("MaNvNavigation");

                    b.Navigation("MaPtpNavigation");
                });

            modelBuilder.Entity("Web_DA.Models.PhieuDatPhong", b =>
                {
                    b.HasOne("Web_DA.Models.KhachHang", "MaKhNavigation")
                        .WithMany("PhieuDatPhongs")
                        .HasForeignKey("MaKh")
                        .IsRequired()
                        .HasConstraintName("pdp_kh_fk");

                    b.HasOne("Web_DA.Models.NhanVien", "MaNvNavigation")
                        .WithMany("PhieuDatPhongs")
                        .HasForeignKey("MaNv")
                        .IsRequired()
                        .HasConstraintName("pdp_nv_fk");

                    b.Navigation("MaKhNavigation");

                    b.Navigation("MaNvNavigation");
                });

            modelBuilder.Entity("Web_DA.Models.PhieuThuePhong", b =>
                {
                    b.HasOne("Web_DA.Models.KhachHang", "MaKhNavigation")
                        .WithMany("PhieuThuePhongs")
                        .HasForeignKey("MaKh")
                        .IsRequired()
                        .HasConstraintName("ptp_kh_fk");

                    b.HasOne("Web_DA.Models.NhanVien", "MaNvNavigation")
                        .WithMany("PhieuThuePhongs")
                        .HasForeignKey("MaNv")
                        .IsRequired()
                        .HasConstraintName("ptp_nv_fk");

                    b.HasOne("Web_DA.Models.PhieuDatPhong", "MaPdpNavigation")
                        .WithMany("PhieuThuePhongs")
                        .HasForeignKey("MaPdp")
                        .IsRequired()
                        .HasConstraintName("ptp_pdp_fk");

                    b.Navigation("MaKhNavigation");

                    b.Navigation("MaNvNavigation");

                    b.Navigation("MaPdpNavigation");
                });

            modelBuilder.Entity("Web_DA.Models.Phong", b =>
                {
                    b.HasOne("Web_DA.Models.LoaiPhong", "MaLpNavigation")
                        .WithMany("Phongs")
                        .HasForeignKey("MaLp")
                        .IsRequired()
                        .HasConstraintName("p_lp_fk");

                    b.Navigation("MaLpNavigation");
                });

            modelBuilder.Entity("Web_DA.Models.QuanTri", b =>
                {
                    b.HasOne("Web_DA.Models.NhomNhanVien", "IdnhomNavigation")
                        .WithMany("QuanTris")
                        .HasForeignKey("Idnhom")
                        .IsRequired()
                        .HasConstraintName("qt_nnv_fk");

                    b.HasOne("Web_DA.Models.NhanVien", "MaNvNavigation")
                        .WithMany("QuanTris")
                        .HasForeignKey("MaNv")
                        .IsRequired()
                        .HasConstraintName("qt_nv_fk");

                    b.Navigation("IdnhomNavigation");

                    b.Navigation("MaNvNavigation");
                });

            modelBuilder.Entity("Web_DA.Models.DichVu", b =>
                {
                    b.Navigation("CtphieuThuePhongs");
                });

            modelBuilder.Entity("Web_DA.Models.KhachHang", b =>
                {
                    b.Navigation("PhieuDatPhongs");

                    b.Navigation("PhieuThuePhongs");
                });

            modelBuilder.Entity("Web_DA.Models.LoaiPhong", b =>
                {
                    b.Navigation("Phongs");
                });

            modelBuilder.Entity("Web_DA.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("PhieuDatPhongs");

                    b.Navigation("PhieuThuePhongs");

                    b.Navigation("QuanTris");
                });

            modelBuilder.Entity("Web_DA.Models.NhomNhanVien", b =>
                {
                    b.Navigation("DanhSachQuyens");

                    b.Navigation("QuanTris");
                });

            modelBuilder.Entity("Web_DA.Models.PhieuDatPhong", b =>
                {
                    b.Navigation("CtphieuDatPhongs");

                    b.Navigation("PhieuThuePhongs");
                });

            modelBuilder.Entity("Web_DA.Models.PhieuThuePhong", b =>
                {
                    b.Navigation("CtphieuThuePhongs");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Web_DA.Models.Phong", b =>
                {
                    b.Navigation("CtphieuDatPhongs");

                    b.Navigation("CtphieuThuePhongs");
                });

            modelBuilder.Entity("Web_DA.Models.Quyen", b =>
                {
                    b.Navigation("DanhSachQuyens");
                });
#pragma warning restore 612, 618
        }
    }
}
